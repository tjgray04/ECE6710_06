0000_0001_1101_0000 // Mov r1, r0
0000_0010_1101_0000 // Mov r2, r0
0101_0001_0100_0000 // Addi r1, 64
0101_0010_0000_1110 // Addi r2, 14
0000_0011_1101_0000 // Mov r3, r0
0000_0100_1101_0000 // Mov r4, r0
0101_0011_0000_0001 // Addi r3, 14
0101_0100_1111_1111 // Addi r4, -14
0000_0010_1011_0000 // LOOP: Cmp r2, r0
1100_0000_0000_1011 // BEQ END: (disp = 11)
0000_0100_0101_0011 // Add r4, r3
0000_0101_1101_0100 // Mov r5, r4
0000_0100_1101_0011 // Mov r4, r3
0000_0011_1101_0101 // Mov r3, r5
0100_0101_0100_0001 // Stor r5, r1
0101_0001_0000_0001 // Addi r1, 11
0101_0010_1111_1111 // Addi r2, -1
0000_0110_1101_0000 // Mov r6, r0
0101_0110_0000_1000 // Addi r6, 8
0100_1110_1100_0110 // JUC LOOP (addr 8)
